{"ast":null,"code":"var _jsxFileName = \"/Users/matsumotoyuyya/udemy/src/conponents/chat/Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Chat.scss\";\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\nimport CardGiftcardIcon from \"@mui/icons-material/CardGiftcard\";\nimport GifIcon from \"@mui/icons-material/Gif\";\nimport EmojiEmotionsIcon from \"@mui/icons-material/EmojiEmotions\";\nimport ChatMessage from \"./ChatMessage\";\nimport ChatHeader from \"./ChatHeader\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport { addDoc, collection, onSnapshot, orderBy, query, serverTimestamp } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [num, setNum] = useState(1);\n  const numInc = () => {\n    setNum(num => num + 1);\n  };\n  console.log(\"確認1\");\n  const [inputText, setInputText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const channelName = useAppSelector(state => state.channel.channelName);\n  const channelId = useAppSelector(state => state.channel.channelId);\n  const user = useAppSelector(state => state.user.user);\n  useEffect(() => {\n    let collectionRef = collection(db, \"channels\", String(channelId), \"message\");\n    const collectionRefOrderBy = query(collectionRef, orderBy(\"timestamp\", \"desc\"));\n    console.log(\"確認2\");\n    onSnapshot(collectionRefOrderBy, snapshot => {\n      console.log(\"確認3\");\n      let results = [];\n      snapshot.docs.forEach(doc => {\n        results.push({\n          timestamp: doc.data().timestamp,\n          message: doc.data().message,\n          user: doc.data().user\n        });\n      });\n      setMessages(results);\n    });\n  }, [channelId]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    const collectionRef = collection(db, \"channels\", String(channelId), \"message\");\n    console.log(\"確認4\");\n    const docRef = await addDoc(collectionRef, {\n      message: inputText,\n      timestamp: serverTimestamp(),\n      user: user\n    });\n    setInputText(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      channelName: channelName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatMessage\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: [\"\\u9001\\u4FE1 onClick=\", numInc(e)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: message.message,\n        timestamp: message.timestamp,\n        user: message.user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatInput\",\n      children: [/*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"#Udemy\\u3078\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u9001\\u4FE1\",\n          onChange: e => setInputText(e.target.value),\n          value: inputText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"chatInputButton\",\n          onClick: e => sendMessage(e),\n          children: \"\\u9001\\u4FE1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatInputIcons\",\n        children: [/*#__PURE__*/_jsxDEV(CardGiftcardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GifIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EmojiEmotionsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"uH6FkwXdZXFJUwxugK4xTMVYVi8=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","AddCircleOutlineIcon","CardGiftcardIcon","GifIcon","EmojiEmotionsIcon","ChatMessage","ChatHeader","useAppSelector","addDoc","collection","onSnapshot","orderBy","query","serverTimestamp","db","jsxDEV","_jsxDEV","Chat","_s","num","setNum","numInc","console","log","inputText","setInputText","messages","setMessages","channelName","state","channel","channelId","user","collectionRef","String","collectionRefOrderBy","snapshot","results","docs","forEach","doc","push","timestamp","data","message","sendMessage","e","preventDefault","docRef","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","action","type","placeholder","onChange","target","value","onClick","_c","$RefreshReg$"],"sources":["/Users/matsumotoyuyya/udemy/src/conponents/chat/Chat.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Chat.scss\";\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\nimport CardGiftcardIcon from \"@mui/icons-material/CardGiftcard\";\nimport GifIcon from \"@mui/icons-material/Gif\";\nimport EmojiEmotionsIcon from \"@mui/icons-material/EmojiEmotions\";\nimport ChatMessage from \"./ChatMessage\";\nimport ChatHeader from \"./ChatHeader\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport {\n  CollectionReference,\n  DocumentData,\n  DocumentReference,\n  Timestamp,\n  addDoc,\n  collection,\n  onSnapshot,\n  orderBy,\n  query,\n  serverTimestamp,\n} from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\n\ninterface Messages {\n  timestamp: Timestamp;\n  message: string;\n  user: {\n    uid: string;\n    photo: string;\n    email: string;\n    displayName: string;\n  };\n}\n\nconst Chat = () => {\n  const [num, setNum] = useState(1);\n\n  const numInc = () => {\n    setNum((num) => num + 1);\n  };\n\n  console.log(\"確認1\");\n  const [inputText, setInputText] = useState<string>(\"\");\n  const [messages, setMessages] = useState<Messages[]>([]);\n\n  const channelName = useAppSelector((state) => state.channel.channelName);\n  const channelId = useAppSelector((state) => state.channel.channelId);\n  const user = useAppSelector((state) => state.user.user);\n\n  useEffect(() => {\n    let collectionRef = collection(\n      db,\n      \"channels\",\n      String(channelId),\n      \"message\"\n    );\n    const collectionRefOrderBy = query(\n      collectionRef,\n      orderBy(\"timestamp\", \"desc\")\n    );\n    console.log(\"確認2\");\n\n    onSnapshot(collectionRefOrderBy, (snapshot) => {\n      console.log(\"確認3\");\n      let results: Messages[] = [];\n      snapshot.docs.forEach((doc) => {\n        results.push({\n          timestamp: doc.data().timestamp,\n          message: doc.data().message,\n          user: doc.data().user,\n        });\n      });\n      setMessages(results);\n    });\n  }, [channelId]);\n\n  const sendMessage = async (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    e.preventDefault();\n    const collectionRef: CollectionReference<DocumentData> = collection(\n      db,\n      \"channels\",\n      String(channelId),\n      \"message\"\n    );\n    console.log(\"確認4\");\n    const docRef: DocumentReference<DocumentData> = await addDoc(\n      collectionRef,\n      {\n        message: inputText,\n        timestamp: serverTimestamp(),\n        user: user,\n      }\n    );\n    setInputText(\"\");\n  };\n\n  return (\n    <div className=\"chat\">\n      {/* chatHeader */}\n      <ChatHeader channelName={channelName} />\n\n      {/* chatMessage */}\n      <div className=\"chatMessage\">\n        <button>送信 onClick={numInc(e)}</button>\n        {messages.map((message, index) => (\n          <ChatMessage\n            key={index}\n            message={message.message}\n            timestamp={message.timestamp}\n            user={message.user}\n          />\n        ))}\n        {/* <ChatMessage />\n        <ChatMessage />\n        <ChatMessage /> */}\n      </div>\n      {/* chatInput */}\n      <div className=\"chatInput\">\n        <AddCircleOutlineIcon />\n        <form action=\"\">\n          <input\n            type=\"text\"\n            placeholder=\"#Udemyへメッセージを送信\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setInputText(e.target.value)\n            }\n            value={inputText}\n          />\n          <button\n            type=\"submit\"\n            className=\"chatInputButton\"\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>\n              sendMessage(e)\n            }\n          >\n            送信\n          </button>\n        </form>\n        <div className=\"chatInputIcons\">\n          <CardGiftcardIcon />\n          <GifIcon />\n          <EmojiEmotionsIcon />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}